<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- <packaging>war</packaging>--> <!-- activate for creating a WAR archive (containing only the app itself) instead of a JAR archive (containing the tomcat aswell)-->
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.tforneberg</groupId>
	<artifactId>PatchDb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>PatchDb</name>
	<description>PatchDB Backend</description> 

	<properties>
		<java.version>1.8</java.version>
	</properties> 
	
	<!-- Amazon AWS Dependency Management -->
	<dependencyManagement>
	   <dependencies>
		   <dependency>
		      <groupId>software.amazon.awssdk</groupId>
		      <artifactId>bom</artifactId>
		      <version>2.4.12</version>
		      <type>pom</type>
		      <scope>import</scope>
		    </dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
	
		<dependency><!-- Starter for building web, including RESTful, applications using Spring MVC. Uses Tomcat as the default embedded container-->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency><!-- Includes testing libraries  -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency><!--  Does some auto configuration and also includes the hot-reloading -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		 
		<dependency><!--  Adds monitoring and operational information features for the application -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency><!--  Adds Hibernate / ORM support  -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency><!-- Auto REST Api generation from JPA repositories -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		
		<dependency> <!-- Adds MySQL database driver at runtime -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency> <!-- For JSON and XML data binding -->
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>
		
		<dependency> <!-- Model Mapper (Conversion Entity <-> DTO) -->
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.4</version>
		</dependency>
		
		<dependency> <!--  Security -->
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
	    </dependency>
	    
	    <dependency> <!-- Thumbnail generation library -->
		  	<groupId>net.coobird</groupId>
		  	<artifactId>thumbnailator</artifactId>
		  	<version>0.4.8</version>
		</dependency>
	  
	  	<dependency> <!-- Access to AWS S3 -->
      		<groupId>software.amazon.awssdk</groupId>
	      	<artifactId>s3</artifactId>
			<!-- <version>2.4.12</version>-->
		</dependency>
	  
	   	<dependency> <!-- Nice lib that provides eg @Getter/@Setter annotations -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.8</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.johnzon</groupId>
		    <artifactId>johnzon-core</artifactId>
		    <version>${johnzon.version}</version>
		</dependency>
		
	  
		
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin><!-- For packaging and running -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				
		      	<plugin><!--  Heroku plugin, can be removed if Heroku is not used for deployment -->
			        <groupId>com.heroku.sdk</groupId>
			        <artifactId>heroku-maven-plugin</artifactId>
			        <version>2.0.6</version>
	     		</plugin>
	     		
	     		 <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-dependency-plugin</artifactId>
	                <executions>
	                    <execution>
	                        <id>copy-dependencies</id>
	                        <phase>package</phase>
	                        <goals><goal>copy-dependencies</goal></goals>
	                    </execution>
	                </executions>
	            </plugin>
	            
	            <plugin><!-- TypeScript Code Generation ... call mvn typescript-generator:generate -->
				    <groupId>cz.habarta.typescript-generator</groupId>
				    <artifactId>typescript-generator-maven-plugin</artifactId>
				    <version>2.17.558</version>
				    <executions>
				        <execution>
				            <id>generate</id>
				            <goals>
				                <goal>generate</goal>
				            </goals>
				            <phase>process-classes</phase>
				        </execution>
				    </executions>
				    <configuration>
				        <jsonLibrary>jackson2</jsonLibrary>
				        <classPatterns>
				            <pattern>de.tforneberg.patchdb.model.**</pattern>
				        </classPatterns>
				        <customTypeMappings>
                    		<mapping>java.sql.Date:string</mapping>
               			</customTypeMappings>
				        <outputKind>module</outputKind>
				        <outputFileType>implementationFile</outputFileType>
				        <mapClasses>asClasses</mapClasses>
				        <excludeClassPatterns>
				        	<excludeClassPattern>
				        		de.tforneberg.patchdb.model.**View
				        	</excludeClassPattern>
				        	<excludeClassPattern>
				        		de.tforneberg.patchdb.model.**Views
				        	</excludeClassPattern>
			        	</excludeClassPatterns>
				        <mapEnum>asEnum</mapEnum>
				        <outputFile>C:/ownCloud/Programmierprojekte/patchdb_frontend/src/model/Model.ts</outputFile>
				    </configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
